Object subclass: #GameArena	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400171'!!GameArena commentStamp: '<historical>' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:For the Class part:  State a one line summary. For example, "I represent a paragraph of text".For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Implementation Points!!GameArena methodsFor: 'as yet unclassified' stamp: 'MuhammedEminGure 5/14/2017 21:46'!start|scourges sentinels infoMsg|scourges := Scourge getHeroList.sentinels := Sentinel getHeroList.player1 := UIManager default chooseFrom: scourges message: 'Player1:Choose a Scourge hero'.player2 := UIManager default chooseFrom: sentinels  message: 'Player2:Choose a Sentinel hero'.infoMsg := '1: ', (player1 asString), ' 2: ', (player2 asString).UIManager default inform: infoMsg.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!GameArena class	instanceVariableNames: 'player1 player2'!!GameArena class methodsFor: 'as yet unclassified' stamp: 'MuhammedEminGure 5/17/2017 15:42'!exist: anItem list: list	0 to:4 do: [:i |		((list at:i) isKindOf: anItem)		ifTrue:		[ ^True] ].	^False.	! !!GameArena class methodsFor: 'as yet unclassified' stamp: 'MuhammedEminGure 5/20/2017 22:35'!showInfo|infoMsg|Transcript clear.	infoMsg := 'Player1	Hero: ',((player1 name) asString),'	',((player1 getHP) asString),' / ',((player1 getMaxHP) asString),' HP	',((player1 getMana) asString),' / ',((player1 getMaxMana) asString),' Mana	Last Action: ',((player1 getLastAction) asString),'	Remaining Potions: ',(((player1 getItemList) occurrencesOf: 'Health Potion') asString),' Health, ',(((player1 getItemList) occurrencesOf: 'Mana Potion') asString),' Mana	Skills in Cooldown: ',((player1 getCooldown2) asString),' 	'.	Transcript show: infoMsg.infoMsg := 'Player2	Hero: ',((player2 name) asString),'	',((player2 getHP) asString),' / ',((player2 getMaxHP) asString),' HP	',((player2 getMana) asString),' / ',((player2 getMaxMana) asString),' Mana	Last Action: ',((player2 getLastAction) asString),'	Remaining Potions: ',(((player2 getItemList) occurrencesOf: 'Health Potion') asString),' Health, ',(((player2 getItemList) occurrencesOf: 'Mana Potion') asString),' Mana	Skills in Cooldown: '.	Transcript show: infoMsg.! !!GameArena class methodsFor: 'as yet unclassified' stamp: 'MuhammedEminGure 5/20/2017 22:35'!start|scourges sentinels damage itemList items1 items2 gold1 gold2 c1 c2 turn infoMsg|scourges := #('Leshrac' 'Lion' 'Mortred' 'NyxAssassin' 'SkeletonKing' 'Tidehunter').sentinels := #('Earthshaker' 'Magina' 'Mirana' 'OgreMagi' 'Rylai' 'Sven'). GameArena setPlayer1: (UIManager default chooseFrom: scourges message: 'Player1:Choose a Scourge hero').GameArena setPlayer2: (UIManager default chooseFrom: sentinels message: 'Player2:Choose a Sentinel hero').player1 = 1ifTrue: [ player1 := Leshrac new. ].player1 = 2ifTrue: [ player1 := Lion new. ].player1 = 3ifTrue: [ player1 := Mortred  new. ].player1 = 4ifTrue: [ player1 := NyxAssassin new. ].player1 = 5ifTrue: [ player1 := SkeletonKing new. ].player1 = 6ifTrue: [ player1 := Tidehunter new. ].player2 = 1ifTrue: [ player2 := Earthshaker new. ].player2 = 2ifTrue: [ player2 := Magina new. ].player2 = 3ifTrue: [ player2 := Mirana  new. ].player2 = 4ifTrue: [ player2 := OgreMagi new. ].player2 = 5ifTrue: [ player2 := Rylai new. ].player2 = 6ifTrue: [ player2 := Sven new. ].itemList := #('Battle Fury' 'Butterfly' 'Daedalus' 'Desolator' 'Energy Booster' 'Health Potion' 'Heart of Tarrasque' 'Hood of Defiance' 'Mana Potion' 'Skull Basher' 'Vanguard' 'Vitaly Booster').infoMsg := '1: ', (player1 asString), ' 2: ', (player2 asString).UIManager default inform: infoMsg.gold1 := player1 getGold.gold2 := player2 getGold. c1 := 1.c2 := 1.Transcript open; clear.[(gold1 > 199) & (c1 < 5) ]whileTrue:[|item msg|	msg:='Choose an item for Player1(remaining slot=',((5-c1) asString ),' ,remaining Gold=',(gold1 asString),')'.		item:=(GameArena itemAssign: (UIManager default chooseFrom: itemList message: msg )).	player1 addItem: item at:c1.	gold1 := gold1 - (item getCost).	"player1 setGold:gold1."	c1 := c1 + 1].[(gold2 > 199) & (c2 < 5)]whileTrue:[	|item msg|	msg:='Choose an item for Player2(remaining slot=',((5-c2) asString ),' ,remaining Gold=',(gold2 asString),')'.		item:=(GameArena itemAssign: (UIManager default chooseFrom: itemList message: msg )).	player2 addItem: item at:c2.	gold2 := gold2 - item getCost.	c2 := c2 + 1.].turn := 1.[((player1 getHP) > 0 ) & ((player2 getHP) >0 )]whileTrue:[	|action actionList|		actionList := Array new:5.		actionList at:1 put:'Attack'.	turn = 1	ifTrue: [ 		|items index hp mana|		index := 2.		items := (player1 getItemList).		(1 to:4 do: [:i | (		((items at:i) isKindOf: HealthPotion )		ifTrue: [ actionList at:index put: 'Health Potion'. hp := i. index := (index + 1)])]).		(1 to:4 do: [:j | (		((items at:j) isKindOf: ManaPotion )		ifTrue: [ actionList at:index put:  'Mana Potion'. mana := j. index := (index + 1) ])]).			(player1 getCooldown1) = 0		ifTrue: [ actionList at:index put: '1Skill'. index := index + 1. ].		(player1 getCooldown2) = 0		ifTrue: [actionList at:index put: '2Skill'].			actionList := actionList reject: [ :a | a = nil ].						action := actionList at:(UIManager default chooseFrom: actionList message: 'Player1 Turn').						player1 setLastAction: action.				action = 'Attack'		ifTrue:		[ |dmg armor|			dmg := (player1 getDamage).			dmg := (((dmg at:1) to:(dmg at:2)) atRandom).			armor := (player2 getArmor).			dmg := (dmg * (1-((0.06*armor)/(1+(0.06*armor))))) rounded.			player2 decreaseHP: dmg.		 ].		action = 'Health Potion'		ifTrue:		[ player1 increaseHP:300.		   player1 removeItem:hp.].		action = 'Mana Potion'		ifTrue:		[ player1 increaseMana:300.		  player1 removeItem:mana.].		(action at:1) = $1		ifTrue: 		[	|action2 damage1 enemyAttack enemyMana evasion cooldown manaUsage| 			action2 := (player1 getSkill1).			((action2 at:1) at:1) = 0			ifTrue: [ ((action2 at:1) at:2) = 'v'						  ifTrue: [ player2 decreaseHP: ((action2 at:1) at:3)  ] ].			((action2 at:2) at:1 )= 0			ifTrue: [  ].			((action2 at:3) at:1 )= 0			ifTrue: [  ].			((action2 at:4) at:1 )= 0			ifTrue: [  ].			player1 setCooldown1: (action2 at:5).			player1 decreaseMana: (action2 at:6).			 ].		(action at:1) = $2		ifTrue:		[	|action2 damage1 enemyAttack enemyMana evasion cooldown manaUsage| 			action2 := (player1 getSkill2).			((action2 at:1) at:1) = 0			ifTrue: [ ((action2 at:1) at:2) = 'v'						  ifTrue: [ player2 decreaseHP: ((action2 at:1) at:3)  ] ].			((action2 at:2) at:1 )= 0			ifTrue: [  ].			((action2 at:3) at:1 )= 0			ifTrue: [  ].			((action2 at:4) at:1 )= 0			ifTrue: [  ].			player1 setCooldown2: (action2 at:5).			player1 decreaseMana: (action2 at:6).			 ].				turn := 2.		   ]		ifFalse: [ 		| items3 index2 hp2 mana2|		index2 := 2.		items3 := (player2 getItemList).		(1 to:4 do: [:i | (		((items3 at:i) isKindOf: HealthPotion )		ifTrue: [ actionList at:index2 put: 'Health Potion'. hp2 := i. index2 := (index2 + 1)])]).		(1 to:4 do: [:j | (		((items3 at:j) isKindOf: ManaPotion )		ifTrue: [ actionList at:index2 put:  'Mana Potion'. mana2 := j. index2 := (index2 + 1) ])]).			(player2 getCooldown1) = 0		ifTrue: [ actionList at:index2 put: '1Skill'. index2 := index2 + 1. ].		(player2 getCooldown2) = 0		ifTrue: [actionList at:index2 put: '2Skill'].			actionList := actionList reject: [ :a | a = nil ].						action := actionList at:(UIManager default chooseFrom: actionList message: 'Player2 Turn').				player2 setLastAction: action.				action = 'Attack'		ifTrue:		[ |dmg armor|			dmg := (player2 getDamage).			dmg := (((dmg at:1) to:(dmg at:2)) atRandom).			armor := (player1 getArmor).			dmg := (dmg * (1-((0.06*armor)/(1+(0.06*armor))))) rounded.			player1 decreaseHP: dmg.		 ].		action = 'Health Potion'		ifTrue:		[ player2 increaseHP:300.		   player2 removeItem:hp2.].		action = 'Mana Potion'		ifTrue:		[ player2 increaseMana:300.		  player2 removeItem:mana2.].		(action at:1) = $1		ifTrue: 		[	|action2 damage1 enemyAttack enemyMana evasion cooldown manaUsage| 			action2 := (player2 getSkill1).			((action2 at:1) at:1) = 0			ifTrue: [ ((action2 at:1) at:2) = 'v'						  ifTrue: [ player1 decreaseHP: ((action2 at:1) at:3)  ] ].			((action2 at:2) at:1 )= 0			ifTrue: [  ].			((action2 at:3) at:1 )= 0			ifTrue: [  ].			((action2 at:4) at:1 )= 0			ifTrue: [  ].			player2 setCooldown1: (action2 at:5).			player2 decreaseMana: (action2 at:6).			 ].		(action at:1) = $2		ifTrue:		[	|action2 damage1 enemyAttack enemyMana evasion cooldown manaUsage| 			action2 := (player2 getSkill2).			((action2 at:1) at:1) = 0			ifTrue: [ ((action2 at:1) at:2) = 'v'						  ifTrue: [ player1 decreaseHP: ((action2 at:1) at:3)  ] ].			((action2 at:2) at:1 )= 0			ifTrue: [  ].			((action2 at:3) at:1 )= 0			ifTrue: [  ].			((action2 at:4) at:1 )= 0			ifTrue: [  ].			player2 setCooldown2: (action2 at:5).			player2 decreaseMana: (action2 at:6).			 ].				turn := 1.		   ].	GameArena showInfo.	 ].! !!GameArena class methodsFor: 'as yet unclassified' stamp: 'MuhammedEminGure 5/15/2017 01:10'!setPlayer1: anObject	player1 := anObject.! !!GameArena class methodsFor: 'as yet unclassified' stamp: 'MuhammedEminGure 5/15/2017 01:12'!setPlayer2: anObject	player2 := anObject.! !!GameArena class methodsFor: 'as yet unclassified' stamp: 'MuhammedEminGure 5/15/2017 01:14'!getPlayer2	^player2! !!GameArena class methodsFor: 'as yet unclassified' stamp: 'MuhammedEminGure 5/15/2017 01:14'!getPlayer1	^player1! !!GameArena class methodsFor: 'as yet unclassified' stamp: 'MuhammedEminGure 5/17/2017 14:29'!itemAssign: anItemanItem = 1ifTrue: [ ^BattleFury new. ].anItem = 2ifTrue: [ ^Butterfly  new. ].anItem = 3ifTrue: [ ^Daedalus new. ].anItem = 4ifTrue: [ ^Desolator new. ].anItem = 5ifTrue: [ ^EnergyBooster new. ].anItem = 6ifTrue: [ ^HealthPotion new. ].anItem = 7ifTrue: [ ^HeartOfTarrasque new. ].anItem = 8ifTrue: [ ^HoodOfDefiance new. ].anItem = 9ifTrue: [ ^ManaPotion new. ].anItem = 10ifTrue: [ ^SkullBasher new. ].anItem = 11ifTrue: [ ^Vanguard new. ].anItem = 12ifTrue: [ ^VitalyBooster new. ].! !!GameArena class methodsFor: 'as yet unclassified' stamp: 'MuhammedEminGure 5/17/2017 15:45'!isExist: anItem list: list	1 to:4 do: [:i |		((list at:i) isKindOf: anItem)		ifTrue:		[ ^True] ].	^False.	! !GameArena subclass: #Hero	instanceVariableNames: 'gold maxHP HP maxMana Mana skill1 skill2 cooldown1 cooldown2 armor damage evasion itemList lastAction'	classVariableNames: ''	poolDictionaries: ''	category: '2014400171'!!Hero commentStamp: '<historical>' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:For the Class part:  State a one line summary. For example, "I represent a paragraph of text".For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Instance Variables	HP:		<Object>	Mana:		<Object>	allBuffs:		<Object>	armor:		<Object>	buffsInCd:		<Object>	criticChance:		<Object>	damage:		<Object>	evasion:		<Object>	isStunned:		<Object>	magicResistance:		<Object>	maxHP:		<Object>	maxMana:		<Object>	regenHP:		<Object>	regenMana:		<Object>	skill1:		<Object>	skill2:		<Object>	stunChance:		<Object>    Implementation Points!!Hero methodsFor: 'accessing' stamp: 'MuhammedEminGure 4/28/2017 22:20'!setSkill2: anObject	skill2 := anObject! !!Hero methodsFor: 'accessing' stamp: 'MuhammedEminGure 4/28/2017 22:18'!getHP	^ HP! !!Hero methodsFor: 'accessing' stamp: 'MuhammedEminGure 4/28/2017 22:20'!getSkill2	^ skill2! !!Hero methodsFor: 'accessing' stamp: 'MuhammedEminGure 4/28/2017 22:18'!setEvasion: anObject	evasion := anObject! !!Hero methodsFor: 'accessing' stamp: 'MuhammedEminGure 5/17/2017 14:15'!getItemList	^ itemList! !!Hero methodsFor: 'accessing' stamp: 'MuhammedEminGure 4/28/2017 22:17'!setCooldown1: anObject	cooldown1 := anObject! !!Hero methodsFor: 'accessing' stamp: 'MuhammedEminGure 4/28/2017 22:20'!getMaxMana	^ maxMana! !!Hero methodsFor: 'accessing' stamp: 'MuhammedEminGure 4/28/2017 22:19'!getIsStunned	^ isStunned! !!Hero methodsFor: 'accessing' stamp: 'MuhammedEminGure 4/28/2017 22:18'!setHP: anObject	HP := anObject! !!Hero methodsFor: 'accessing' stamp: 'MuhammedEminGure 4/28/2017 22:16'!getArmor	^ armor! !!Hero methodsFor: 'accessing' stamp: 'MuhammedEminGure 4/28/2017 22:19'!setMana: anObject	Mana := anObject! !!Hero methodsFor: 'accessing' stamp: 'MuhammedEminGure 4/28/2017 22:16'!setArmor: anObject	armor := anObject! !!Hero methodsFor: 'accessing' stamp: 'MuhammedEminGure 4/28/2017 22:20'!setMaxMana: anObject	maxMana := anObject! !!Hero methodsFor: 'accessing' stamp: 'MuhammedEminGure 4/28/2017 22:16'!getCooldown1	^ cooldown1! !!Hero methodsFor: 'accessing' stamp: 'MuhammedEminGure 4/28/2017 22:18'!getEvasion	^ evasion! !!Hero methodsFor: 'accessing' stamp: 'MuhammedEminGure 5/17/2017 14:02'!setGold: anObject	gold := anObject! !!Hero methodsFor: 'accessing' stamp: 'MuhammedEminGure 5/17/2017 14:02'!getGold	^ gold! !!Hero methodsFor: 'accessing' stamp: 'MuhammedEminGure 4/28/2017 22:19'!getMana	^ Mana! !!Hero methodsFor: 'accessing' stamp: 'MuhammedEminGure 4/28/2017 22:19'!setMaxHP: anObject	maxHP := anObject! !!Hero methodsFor: 'accessing' stamp: 'MuhammedEminGure 4/28/2017 22:20'!getSkill1	^ skill1! !!Hero methodsFor: 'accessing' stamp: 'MuhammedEminGure 4/28/2017 22:20'!setSkill1: anObject	skill1 := anObject! !!Hero methodsFor: 'accessing' stamp: 'MuhammedEminGure 4/28/2017 22:17'!getDamage	^ damage! !!Hero methodsFor: 'accessing' stamp: 'MuhammedEminGure 4/28/2017 22:18'!setDamage: anObject	damage := anObject! !!Hero methodsFor: 'accessing' stamp: 'MuhammedEminGure 4/28/2017 22:17'!setCooldown2: anObject	cooldown2 := anObject! !!Hero methodsFor: 'accessing' stamp: 'MuhammedEminGure 4/28/2017 22:17'!getCooldown2	^ cooldown2! !!Hero methodsFor: 'accessing' stamp: 'MuhammedEminGure 4/28/2017 22:19'!getMaxHP	^ maxHP! !!Hero methodsFor: 'accessing' stamp: 'MuhammedEminGure 4/28/2017 22:19'!setIsStunned: anObject	isStunned := anObject! !!Hero methodsFor: 'accessing' stamp: 'MuhammedEminGure 5/20/2017 22:13'!setLastAction: action	lastAction := action.! !!Hero methodsFor: 'as yet unclassified' stamp: 'MuhammedEminGure 5/18/2017 13:10'!decreaseHP: value	HP := (HP - value).! !!Hero methodsFor: 'as yet unclassified' stamp: 'MuhammedEminGure 5/18/2017 21:06'!increaseHP: value	HP := (HP + value).! !!Hero methodsFor: 'as yet unclassified' stamp: 'MuhammedEminGure 5/18/2017 22:00'!removeItem: index	itemList at: index put: nil.! !!Hero methodsFor: 'as yet unclassified' stamp: 'MuhammedEminGure 5/20/2017 22:12'!getLastAction	^lastAction.! !!Hero methodsFor: 'as yet unclassified' stamp: 'MuhammedEminGure 5/18/2017 22:25'!decreaseMana: value	Mana := (Mana - value).! !!Hero methodsFor: 'as yet unclassified' stamp: 'MuhammedEminGure 5/18/2017 21:07'!increaseMana: value	Mana := (Mana + value).! !!Hero methodsFor: 'as yet unclassified' stamp: 'MuhammedEminGure 5/17/2017 14:23'!addItem: anItem at: index	itemList at: index put: anItem.! !!Hero methodsFor: 'initialization' stamp: 'MuhammedEminGure 5/20/2017 22:12'!initialize	super initialize.	itemList := Array new:4.	gold := 11000.	HP := nil.	Mana := nil.	armor := nil.	cooldown1 := 0.	cooldown2 := 0.	damage := nil.	evasion := nil.	maxHP := nil.	maxMana := nil.	skill1 := nil.	skill2 := nil.	lastAction := ''! !GameArena subclass: #Item	instanceVariableNames: 'name cost cHp mHp cMana mMana armor enemyArmor skillTakenDamage receivedDamage outgoingDamage'	classVariableNames: ''	poolDictionaries: ''	category: '2014400171'!!Item methodsFor: 'accessing' stamp: 'MuhammedEminGure 4/28/2017 22:24'!setCost: anObject	cost := anObject! !!Item methodsFor: 'accessing' stamp: 'MuhammedEminGure 4/28/2017 22:24'!setName: anObject	name := anObject! !!Item methodsFor: 'accessing' stamp: 'MuhammedEminGure 4/28/2017 22:24'!setDetails: anObject	details := anObject! !!Item methodsFor: 'accessing' stamp: 'MuhammedEminGure 4/28/2017 22:24'!getName	^ name! !!Item methodsFor: 'accessing' stamp: 'MuhammedEminGure 4/28/2017 22:24'!getDetails	^ details! !!Item methodsFor: 'accessing' stamp: 'MuhammedEminGure 4/28/2017 22:23'!getCost	^ cost! !!Item methodsFor: 'initialization' stamp: 'MuhammedEminGure 5/14/2017 22:56'!initialize	super initialize.	armor := 0.	cHp := 0.	cMana := 0.	cost := 0.	enemyArmor := 0.	mHp := 0.	mMana := 0.	name := 0.	outgoingDamage := 0.	receivedDamage := 0.	skillTakenDamage := 0.! !Item subclass: #BattleFury	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400171'!!BattleFury methodsFor: 'as yet unclassified' stamp: 'MuhammedEminGure 5/20/2017 22:17'!initialize	super initialize.		cost := 4500.! !Item subclass: #Butterfly	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400171'!!Butterfly methodsFor: 'as yet unclassified' stamp: 'MuhammedEminGure 5/20/2017 22:17'!initialize	super initialize.		cost := 5500.! !Item subclass: #Daedalus	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400171'!!Daedalus methodsFor: 'as yet unclassified' stamp: 'MuhammedEminGure 5/20/2017 22:18'!initialize	super initialize.		cost := 5500.! !Item subclass: #Desolator	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400171'!!Desolator methodsFor: 'as yet unclassified' stamp: 'MuhammedEminGure 5/14/2017 23:01'!initialize	super initialize.		cost := 04000.	outgoingDamage := 050.	enemyArmor := 05.! !Item subclass: #EnergyBooster	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400171'!!EnergyBooster methodsFor: 'as yet unclassified' stamp: 'MuhammedEminGure 5/14/2017 22:55'!initialize	super initialize.		mMana := 250.	cost := 1100.! !Item subclass: #HealthPotion	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400171'!!HealthPotion methodsFor: 'as yet unclassified' stamp: 'MuhammedEminGure 5/14/2017 22:58'!initialize	super initialize.		cost := 200.	cHp := 0300.! !Item subclass: #HeartOfTarrasque	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400171'!!HeartOfTarrasque methodsFor: 'as yet unclassified' stamp: 'MuhammedEminGure 5/20/2017 22:18'!initialize	super initialize.		cost := 5600.! !Item subclass: #HoodOfDefiance	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400171'!!HoodOfDefiance methodsFor: 'as yet unclassified' stamp: 'MuhammedEminGure 5/20/2017 22:18'!initialize	super initialize.		cost := 2000.! !Item subclass: #ManaPotion	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400171'!!ManaPotion methodsFor: 'as yet unclassified' stamp: 'MuhammedEminGure 5/14/2017 22:57'!initialize	super initialize.		cost := 200.	cMana := 0300.! !Hero subclass: #Scourge	instanceVariableNames: ''	classVariableNames: 'heroList'	poolDictionaries: ''	category: '2014400171'!!Scourge methodsFor: 'accessing' stamp: 'MuhammedEminGure 5/14/2017 21:41'!setHeroList: anObject	heroList := anObject! !!Scourge methodsFor: 'accessing' stamp: 'MuhammedEminGure 5/14/2017 21:41'!getHeroList	^ heroList! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Scourge class	instanceVariableNames: 'heroList'!!Scourge class methodsFor: 'as yet unclassified' stamp: 'MuhammedEminGure 5/14/2017 22:12'!setHeroList: anObject	heroList := anObject! !!Scourge class methodsFor: 'as yet unclassified' stamp: 'MuhammedEminGure 5/14/2017 22:12'!getHeroList	^ heroList! !Scourge subclass: #Leshrac	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400171'!!Leshrac methodsFor: 'initialization' stamp: 'MuhammedEminGure 5/15/2017 01:41'!initialize	super initialize.		armor := 12.	damage := #(133 137).	maxHP := 1518.	maxMana := 1534.	HP := maxHP.	Mana := maxMana.	skill1 := #((0 v 300) (0 0 0) (0 0 0) (0 0 0) 5 160).	skill2 := 'Pulse Nova'.! !Scourge subclass: #Lion	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400171'!!Lion methodsFor: 'as yet unclassified' stamp: 'MuhammedEminGure 5/15/2017 01:42'!initialize	super initialize.		armor := 9.	damage := #(139 145).	maxHP := 1609.	maxMana := 1456.	HP := maxHP.	Mana := maxMana.	skill1 := #((0 v 260) (0 0 0) (0 0 0) (0 0 0) 5 160).	skill2 := #((0 v 850) (0 0 0) (0 0 0) (0 0 0) 8 650).! !Scourge subclass: #Mortred	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400171'!!Mortred methodsFor: 'as yet unclassified' stamp: 'MuhammedEminGure 5/15/2017 01:42'!initialize	super initialize.		armor := 18.	damage := #(142 144).	maxHP := 1754.	maxMana := 892.	HP := maxHP.	Mana := maxMana.	skill1 := 'Blur'.	skill2 := 'Coup de Grace'.! !Scourge subclass: #NyxAssassin	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400171'!!NyxAssassin methodsFor: 'as yet unclassified' stamp: 'MuhammedEminGure 5/15/2017 01:42'!initialize	super initialize.		armor := 14.	damage := #(122 126).	maxHP := 1784.	maxMana := 1149.	HP := maxHP.	Mana := maxMana.	skill1 := #((0 v 260) (0 0 0) (0 0 0) (0 0 0) 5 225).	skill2 := #((0 0 0) (0 0 0) (0 p 20) (0 0 0) 5 50).! !Hero subclass: #Sentinel	instanceVariableNames: ''	classVariableNames: 'heroList'	poolDictionaries: ''	category: '2014400171'!!Sentinel methodsFor: 'as yet unclassified' stamp: 'MuhammedEminGure 5/14/2017 21:42'!setHeroList: anObject	heroList := anObject! !!Sentinel methodsFor: 'as yet unclassified' stamp: 'MuhammedEminGure 5/14/2017 21:43'!getHeroList	^heroList! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Sentinel class	instanceVariableNames: 'heroList'!!Sentinel class methodsFor: 'as yet unclassified' stamp: 'MuhammedEminGure 5/14/2017 22:14'!setHeroList: anObject	heroList := anObject! !!Sentinel class methodsFor: 'as yet unclassified' stamp: 'MuhammedEminGure 5/14/2017 22:13'!getHeroList	^heroList! !Sentinel subclass: #Earthshaker	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400171'!!Earthshaker methodsFor: 'as yet unclassified' stamp: 'MuhammedEminGure 5/15/2017 01:42'!initialize	super initialize.		armor := 10.	damage := #(136 146).	maxHP := 2270.	maxMana := 1030.	HP := maxHP.	Mana := maxMana.	skill1 := #((0 v 260) (0 0 0) (0 0 0) (0 0 0) 5 170).	skill2 := #((1 x 4) (0 0 0) (0 0 0) (0 0 0) 5 50).! !Sentinel subclass: #Magina	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400171'!!Magina methodsFor: 'as yet unclassified' stamp: 'MuhammedEminGure 5/15/2017 01:42'!initialize	super initialize.		armor := 14.	damage := #(136 140).	maxHP := 1495.	maxMana := 1017.	HP := maxHP.	Mana := maxMana.	skill1 := 'Mana Break'.	skill2 := 'Mana Void'.! !Sentinel subclass: #Mirana	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400171'!!Mirana methodsFor: 'as yet unclassified' stamp: 'MuhammedEminGure 5/15/2017 01:43'!initialize	super initialize.		armor := 16.	damage := #(137 148).	maxHP := 1697.	maxMana := 996.	HP := maxHP.	Mana := maxMana.	skill1 := #((0 v 300) (0 0 0) (0 0 0) (0 0 0) 4 160).	skill2 := 'Sacred Arrow'.! !Sentinel subclass: #OgreMagi	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400171'!!OgreMagi methodsFor: 'as yet unclassified' stamp: 'MuhammedEminGure 5/15/2017 01:43'!initialize	super initialize.		armor := 16.	damage := #(126 132).	maxHP := 2426.	maxMana := 1105.	HP := maxHP.	Mana := maxMana.	skill1 := #((0 v 220) (0 0 0) (0 0 0) (0 0 0) 5 225).	skill2 := 'Multicast'.! !Sentinel subclass: #Rylai	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400171'!!Rylai methodsFor: 'as yet unclassified' stamp: 'MuhammedEminGure 5/15/2017 01:43'!initialize	super initialize.		armor := 9.	damage := #(125 131).	maxHP := 1609.	maxMana := 1373.	HP := maxHP.	Mana := maxMana.	skill1 := #((0 v 300) (0 0 0) (0 0 0) (0 0 0) 5 150).	skill2 := #((0 v 800) (0 0 0) (0 0 0) (0 0 0) 8 600).! !Scourge subclass: #SkeletonKing	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400171'!!SkeletonKing methodsFor: 'as yet unclassified' stamp: 'MuhammedEminGure 5/15/2017 01:41'!initialize	super initialize.		armor := 11.	damage := #(151 153).	maxHP := 2270.	maxMana := 993.	HP := maxHP.	Mana := maxMana.	skill1 := #((0 v 300) (0 0 0) (0 0 0) (0 0 0) 5 140).	skill2 := 'Vampiric Aura'.! !Sentinel subclass: #Sven	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400171'!!Sven methodsFor: 'as yet unclassified' stamp: 'MuhammedEminGure 5/15/2017 01:43'!initialize	super initialize.		armor := 14.	damage := #(149 151).	maxHP := 2198.	maxMana := 874.	HP := maxHP.	Mana := maxMana.	skill1 := #((0 v 325) (0 0 0) (0 0 0) (0 0 0) 5 140).	skill2 := #((3 x 2) (0 0 0) (0 0 0) (0 0 0) 5 200).! !Scourge subclass: #Tidehunter	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400171'!!Tidehunter methodsFor: 'as yet unclassified' stamp: 'MuhammedEminGure 5/15/2017 01:42'!initialize	super initialize.		armor := 11.	damage := #(139 145).	maxHP := 2316.	maxMana := 998.	HP := maxHP.	Mana := maxMana.	skill1 := #((0 v 225) (1 p 60) (0 0 0) (0 0 0) 3 60).	skill2 := #((0 v 380) (0 0 0) (0 0 0) (0 0 0) 8 325).! !Item subclass: #Vanguard	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400171'!!Vanguard methodsFor: 'as yet unclassified' stamp: 'MuhammedEminGure 5/20/2017 22:19'!initialize	super initialize.		cost := 2500.! !Item subclass: #VitalyBooster	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '2014400171'!!VitalyBooster methodsFor: 'as yet unclassified' stamp: 'MuhammedEminGure 5/20/2017 22:21'!initialize	super initialize.		mHp := 250.	cost := 1200.! !